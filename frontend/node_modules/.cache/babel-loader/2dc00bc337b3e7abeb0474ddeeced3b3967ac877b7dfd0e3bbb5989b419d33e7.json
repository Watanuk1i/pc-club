{"ast":null,"code":"const useTelegram = () => {\n  var _window$Telegram, _tg$initDataUnsafe;\n  const tg = (_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : _window$Telegram.WebApp;\n  const onClose = () => {\n    tg === null || tg === void 0 ? void 0 : tg.close();\n  };\n  const onToggleButton = () => {\n    if (tg !== null && tg !== void 0 && tg.MainButton.isVisible) {\n      tg.MainButton.hide();\n    } else {\n      tg === null || tg === void 0 ? void 0 : tg.MainButton.show();\n    }\n  };\n  return {\n    onClose,\n    onToggleButton,\n    tg,\n    user: tg === null || tg === void 0 ? void 0 : (_tg$initDataUnsafe = tg.initDataUnsafe) === null || _tg$initDataUnsafe === void 0 ? void 0 : _tg$initDataUnsafe.user\n  };\n};\nexport default useTelegram;","map":{"version":3,"names":["useTelegram","_window$Telegram","_tg$initDataUnsafe","tg","window","Telegram","WebApp","onClose","close","onToggleButton","MainButton","isVisible","hide","show","user","initDataUnsafe"],"sources":["C:/Users/USER/Desktop/PC_CLUB/frontend/src/hooks/useTelegram.ts"],"sourcesContent":["declare global {\r\n  interface Window {\r\n    Telegram?: {\r\n      WebApp: {\r\n        ready: () => void;\r\n        expand: () => void;\r\n        close: () => void;\r\n        MainButton: {\r\n          text: string;\r\n          isVisible: boolean;\r\n          show: () => void;\r\n          hide: () => void;\r\n          onClick: (callback: () => void) => void;\r\n          offClick: (callback: () => void) => void;\r\n          enable: () => void;\r\n          disable: () => void;\r\n        };\r\n        BackButton: {\r\n          show: () => void;\r\n          hide: () => void;\r\n          onClick: (callback: () => void) => void;\r\n          offClick: (callback: () => void) => void;\r\n        };\r\n        onEvent: (eventType: string, callback: () => void) => void;\r\n        offEvent: (eventType: string, callback: () => void) => void;\r\n        sendData: (data: any) => void;\r\n        initDataUnsafe: {\r\n          user?: {\r\n            id: number;\r\n            first_name: string;\r\n            last_name?: string;\r\n            username?: string;\r\n          };\r\n          query_id?: string;\r\n        };\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nconst useTelegram = () => {\r\n  const tg = window.Telegram?.WebApp;\r\n\r\n  const onClose = () => {\r\n    tg?.close();\r\n  };\r\n\r\n  const onToggleButton = () => {\r\n    if (tg?.MainButton.isVisible) {\r\n      tg.MainButton.hide();\r\n    } else {\r\n      tg?.MainButton.show();\r\n    }\r\n  };\r\n\r\n  return {\r\n    onClose,\r\n    onToggleButton,\r\n    tg,\r\n    user: tg?.initDataUnsafe?.user,\r\n  };\r\n};\r\n\r\nexport default useTelegram; "],"mappings":"AAwCA,MAAMA,WAAW,GAAGA,CAAA,KAAM;EAAA,IAAAC,gBAAA,EAAAC,kBAAA;EACxB,MAAMC,EAAE,IAAAF,gBAAA,GAAGG,MAAM,CAACC,QAAQ,cAAAJ,gBAAA,uBAAfA,gBAAA,CAAiBK,MAAM;EAElC,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBJ,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEK,KAAK,CAAC,CAAC;EACb,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIN,EAAE,aAAFA,EAAE,eAAFA,EAAE,CAAEO,UAAU,CAACC,SAAS,EAAE;MAC5BR,EAAE,CAACO,UAAU,CAACE,IAAI,CAAC,CAAC;IACtB,CAAC,MAAM;MACLT,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEO,UAAU,CAACG,IAAI,CAAC,CAAC;IACvB;EACF,CAAC;EAED,OAAO;IACLN,OAAO;IACPE,cAAc;IACdN,EAAE;IACFW,IAAI,EAAEX,EAAE,aAAFA,EAAE,wBAAAD,kBAAA,GAAFC,EAAE,CAAEY,cAAc,cAAAb,kBAAA,uBAAlBA,kBAAA,CAAoBY;EAC5B,CAAC;AACH,CAAC;AAED,eAAed,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}