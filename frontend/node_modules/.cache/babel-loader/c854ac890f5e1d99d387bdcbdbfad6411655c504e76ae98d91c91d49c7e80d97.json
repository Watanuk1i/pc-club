{"ast":null,"code":"const useTelegram=()=>{var _window$Telegram,_tg$initDataUnsafe;const tg=(_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:_window$Telegram.WebApp;const onClose=()=>{tg===null||tg===void 0?void 0:tg.close();};const onToggleButton=()=>{if(tg!==null&&tg!==void 0&&tg.MainButton.isVisible){tg.MainButton.hide();}else{tg===null||tg===void 0?void 0:tg.MainButton.show();}};return{onClose,onToggleButton,tg,user:tg===null||tg===void 0?void 0:(_tg$initDataUnsafe=tg.initDataUnsafe)===null||_tg$initDataUnsafe===void 0?void 0:_tg$initDataUnsafe.user};};export default useTelegram;","map":{"version":3,"names":["useTelegram","_window$Telegram","_tg$initDataUnsafe","tg","window","Telegram","WebApp","onClose","close","onToggleButton","MainButton","isVisible","hide","show","user","initDataUnsafe"],"sources":["C:/Users/USER/Desktop/PC_CLUB/frontend/src/hooks/useTelegram.ts"],"sourcesContent":["declare global {\r\n  interface Window {\r\n    Telegram?: {\r\n      WebApp: {\r\n        ready: () => void;\r\n        expand: () => void;\r\n        close: () => void;\r\n        MainButton: {\r\n          text: string;\r\n          isVisible: boolean;\r\n          show: () => void;\r\n          hide: () => void;\r\n          onClick: (callback: () => void) => void;\r\n          offClick: (callback: () => void) => void;\r\n          enable: () => void;\r\n          disable: () => void;\r\n        };\r\n        BackButton: {\r\n          show: () => void;\r\n          hide: () => void;\r\n          onClick: (callback: () => void) => void;\r\n          offClick: (callback: () => void) => void;\r\n        };\r\n        onEvent: (eventType: string, callback: () => void) => void;\r\n        offEvent: (eventType: string, callback: () => void) => void;\r\n        sendData: (data: any) => void;\r\n        initDataUnsafe: {\r\n          user?: {\r\n            id: number;\r\n            first_name: string;\r\n            last_name?: string;\r\n            username?: string;\r\n          };\r\n          query_id?: string;\r\n        };\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nconst useTelegram = () => {\r\n  const tg = window.Telegram?.WebApp;\r\n\r\n  const onClose = () => {\r\n    tg?.close();\r\n  };\r\n\r\n  const onToggleButton = () => {\r\n    if (tg?.MainButton.isVisible) {\r\n      tg.MainButton.hide();\r\n    } else {\r\n      tg?.MainButton.show();\r\n    }\r\n  };\r\n\r\n  return {\r\n    onClose,\r\n    onToggleButton,\r\n    tg,\r\n    user: tg?.initDataUnsafe?.user,\r\n  };\r\n};\r\n\r\nexport default useTelegram; "],"mappings":"AAwCA,KAAM,CAAAA,WAAW,CAAGA,CAAA,GAAM,KAAAC,gBAAA,CAAAC,kBAAA,CACxB,KAAM,CAAAC,EAAE,EAAAF,gBAAA,CAAGG,MAAM,CAACC,QAAQ,UAAAJ,gBAAA,iBAAfA,gBAAA,CAAiBK,MAAM,CAElC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpBJ,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEK,KAAK,CAAC,CAAC,CACb,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIN,EAAE,SAAFA,EAAE,WAAFA,EAAE,CAAEO,UAAU,CAACC,SAAS,CAAE,CAC5BR,EAAE,CAACO,UAAU,CAACE,IAAI,CAAC,CAAC,CACtB,CAAC,IAAM,CACLT,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEO,UAAU,CAACG,IAAI,CAAC,CAAC,CACvB,CACF,CAAC,CAED,MAAO,CACLN,OAAO,CACPE,cAAc,CACdN,EAAE,CACFW,IAAI,CAAEX,EAAE,SAAFA,EAAE,kBAAAD,kBAAA,CAAFC,EAAE,CAAEY,cAAc,UAAAb,kBAAA,iBAAlBA,kBAAA,CAAoBY,IAC5B,CAAC,CACH,CAAC,CAED,cAAe,CAAAd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}