{"ast":null,"code":"const generateComputers=()=>{const computers=[];// Генерируем стандартные ПК\nfor(let i=1;i<=15;i++){computers.push({id:i,name:`PC ${i}`,type:'pc',zone:'Стандарт',status:Math.random()>0.7?'busy':Math.random()>0.9?'maintenance':'free',specs:{cpu:'Intel Core i7-13700K',gpu:'NVIDIA RTX 4070',ram:'32GB DDR5',monitor:'240Hz 27\" ASUS TUF'},price:100});}// Генерируем VIP буткемпы\nfor(let camp=1;camp<=3;camp++){for(let i=1;i<=5;i++){computers.push({id:15+(camp-1)*5+i,name:`VIP ${i}`,type:'pc',zone:'VIP',bootcamp:camp,status:Math.random()>0.7?'busy':Math.random()>0.9?'maintenance':'free',specs:{cpu:'Intel Core i9-13900K',gpu:'NVIDIA RTX 4090',ram:'64GB DDR5',monitor:'360Hz 27\" ASUS ROG'},price:200});}}// Добавляем ТВ зоны\nconst tvZones=[{id:31,name:'PlayStation 5',type:'tv',zone:'TV Zone',status:'free',specs:{cpu:'PlayStation 5',gpu:'AMD RDNA 2',ram:'16GB GDDR6',monitor:'65\" 4K HDR TV'},price:250},{id:32,name:'Xbox Series X',type:'tv',zone:'TV Zone',status:'busy',specs:{cpu:'Xbox Series X',gpu:'AMD RDNA 2',ram:'16GB GDDR6',monitor:'65\" 4K HDR TV'},price:250},{id:33,name:'Nintendo Switch',type:'tv',zone:'TV Zone',status:'free',specs:{cpu:'Nintendo Switch',gpu:'NVIDIA Tegra X1',ram:'4GB',monitor:'55\" 4K HDR TV'},price:200}];return[...computers,...tvZones];};export const mockComputers=generateComputers();export const getComputersByZone=()=>{const zones=new Map();mockComputers.forEach(computer=>{if(!zones.has(computer.zone)){zones.set(computer.zone,new Map([[null,[]]]));}const zoneMap=zones.get(computer.zone);if(computer.bootcamp){var _zoneMap$get;if(!zoneMap.has(computer.bootcamp)){zoneMap.set(computer.bootcamp,[]);}(_zoneMap$get=zoneMap.get(computer.bootcamp))===null||_zoneMap$get===void 0?void 0:_zoneMap$get.push(computer);}else{var _zoneMap$get2;(_zoneMap$get2=zoneMap.get(null))===null||_zoneMap$get2===void 0?void 0:_zoneMap$get2.push(computer);}});return zones;};export const getStatusColor=status=>{switch(status){case'free':return'success';case'busy':return'error';case'maintenance':return'warning';default:return'default';}};export const getStatusText=status=>{switch(status){case'free':return'Свободен';case'busy':return'Занят';case'maintenance':return'Обслуживание';default:return status;}};","map":{"version":3,"names":["generateComputers","computers","i","push","id","name","type","zone","status","Math","random","specs","cpu","gpu","ram","monitor","price","camp","bootcamp","tvZones","mockComputers","getComputersByZone","zones","Map","forEach","computer","has","set","zoneMap","get","_zoneMap$get","_zoneMap$get2","getStatusColor","getStatusText"],"sources":["C:/Users/USER/Desktop/PC_CLUB/frontend/src/mocks/computersMock.ts"],"sourcesContent":["export interface Computer {\r\n  id: number;\r\n  name: string;\r\n  type: 'pc' | 'tv';\r\n  zone: string;\r\n  bootcamp?: number;\r\n  status: 'free' | 'busy' | 'maintenance';\r\n  specs?: {\r\n    cpu: string;\r\n    gpu: string;\r\n    ram: string;\r\n    monitor: string;\r\n  };\r\n  price: number;\r\n}\r\n\r\nconst generateComputers = (): Computer[] => {\r\n  const computers: Computer[] = [];\r\n\r\n  // Генерируем стандартные ПК\r\n  for (let i = 1; i <= 15; i++) {\r\n    computers.push({\r\n      id: i,\r\n      name: `PC ${i}`,\r\n      type: 'pc',\r\n      zone: 'Стандарт',\r\n      status: Math.random() > 0.7 ? 'busy' : Math.random() > 0.9 ? 'maintenance' : 'free',\r\n      specs: {\r\n        cpu: 'Intel Core i7-13700K',\r\n        gpu: 'NVIDIA RTX 4070',\r\n        ram: '32GB DDR5',\r\n        monitor: '240Hz 27\" ASUS TUF'\r\n      },\r\n      price: 100\r\n    });\r\n  }\r\n\r\n  // Генерируем VIP буткемпы\r\n  for (let camp = 1; camp <= 3; camp++) {\r\n    for (let i = 1; i <= 5; i++) {\r\n      computers.push({\r\n        id: 15 + (camp - 1) * 5 + i,\r\n        name: `VIP ${i}`,\r\n        type: 'pc',\r\n        zone: 'VIP',\r\n        bootcamp: camp,\r\n        status: Math.random() > 0.7 ? 'busy' : Math.random() > 0.9 ? 'maintenance' : 'free',\r\n        specs: {\r\n          cpu: 'Intel Core i9-13900K',\r\n          gpu: 'NVIDIA RTX 4090',\r\n          ram: '64GB DDR5',\r\n          monitor: '360Hz 27\" ASUS ROG'\r\n        },\r\n        price: 200\r\n      });\r\n    }\r\n  }\r\n\r\n  // Добавляем ТВ зоны\r\n  const tvZones: Computer[] = [\r\n    {\r\n      id: 31,\r\n      name: 'PlayStation 5',\r\n      type: 'tv' as const,\r\n      zone: 'TV Zone',\r\n      status: 'free',\r\n      specs: {\r\n        cpu: 'PlayStation 5',\r\n        gpu: 'AMD RDNA 2',\r\n        ram: '16GB GDDR6',\r\n        monitor: '65\" 4K HDR TV'\r\n      },\r\n      price: 250\r\n    },\r\n    {\r\n      id: 32,\r\n      name: 'Xbox Series X',\r\n      type: 'tv' as const,\r\n      zone: 'TV Zone',\r\n      status: 'busy',\r\n      specs: {\r\n        cpu: 'Xbox Series X',\r\n        gpu: 'AMD RDNA 2',\r\n        ram: '16GB GDDR6',\r\n        monitor: '65\" 4K HDR TV'\r\n      },\r\n      price: 250\r\n    },\r\n    {\r\n      id: 33,\r\n      name: 'Nintendo Switch',\r\n      type: 'tv' as const,\r\n      zone: 'TV Zone',\r\n      status: 'free',\r\n      specs: {\r\n        cpu: 'Nintendo Switch',\r\n        gpu: 'NVIDIA Tegra X1',\r\n        ram: '4GB',\r\n        monitor: '55\" 4K HDR TV'\r\n      },\r\n      price: 200\r\n    }\r\n  ];\r\n\r\n  return [...computers, ...tvZones];\r\n};\r\n\r\nexport const mockComputers = generateComputers();\r\n\r\nexport const getComputersByZone = () => {\r\n  const zones = new Map<string, Map<number | null, Computer[]>>();\r\n  \r\n  mockComputers.forEach(computer => {\r\n    if (!zones.has(computer.zone)) {\r\n      zones.set(computer.zone, new Map([[null, []]]));\r\n    }\r\n    \r\n    const zoneMap = zones.get(computer.zone)!;\r\n    \r\n    if (computer.bootcamp) {\r\n      if (!zoneMap.has(computer.bootcamp)) {\r\n        zoneMap.set(computer.bootcamp, []);\r\n      }\r\n      zoneMap.get(computer.bootcamp)?.push(computer);\r\n    } else {\r\n      zoneMap.get(null)?.push(computer);\r\n    }\r\n  });\r\n\r\n  return zones;\r\n};\r\n\r\nexport const getStatusColor = (status: string) => {\r\n  switch (status) {\r\n    case 'free':\r\n      return 'success';\r\n    case 'busy':\r\n      return 'error';\r\n    case 'maintenance':\r\n      return 'warning';\r\n    default:\r\n      return 'default';\r\n  }\r\n};\r\n\r\nexport const getStatusText = (status: string) => {\r\n  switch (status) {\r\n    case 'free':\r\n      return 'Свободен';\r\n    case 'busy':\r\n      return 'Занят';\r\n    case 'maintenance':\r\n      return 'Обслуживание';\r\n    default:\r\n      return status;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}