{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\PC_CLUB\\\\frontend\\\\src\\\\components\\\\Bookings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Typography, Chip } from '@mui/material';\nimport { Cancel } from '@mui/icons-material';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Bookings = () => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n  const fetchBookings = async () => {\n    try {\n      const tg = window.Telegram.WebApp;\n      const response = await axios.get(`/api/bookings/user/${tg.initDataUnsafe.user.id}`);\n      setBookings(response.data);\n    } catch (error) {\n      console.error('Ошибка при загрузке бронирований:', error);\n    }\n  };\n  const handleCancel = async bookingId => {\n    try {\n      await axios.put(`/api/bookings/${bookingId}/cancel`);\n      fetchBookings();\n    } catch (error) {\n      console.error('Ошибка при отмене бронирования:', error);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return 'primary';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'active':\n        return 'Активно';\n      case 'completed':\n        return 'Завершено';\n      case 'cancelled':\n        return 'Отменено';\n      default:\n        return status;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        my: 2\n      },\n      children: \"\\u041C\\u043E\\u0438 \\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: bookings.map(booking => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: booking.computer.name,\n          secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [format(new Date(booking.start_time), 'PPp', {\n              locale: ru\n            }), ' - ', format(new Date(booking.end_time), 'PPp', {\n              locale: ru\n            })]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: getStatusText(booking.status),\n            color: getStatusColor(booking.status),\n            size: \"small\",\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), booking.status === 'active' && /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            onClick: () => handleCancel(booking.id),\n            color: \"error\",\n            children: /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, booking.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Bookings, \"mhYuI94oNh8neuxZ6UayUTRC/Ns=\");\n_c = Bookings;\nexport default Bookings;\nvar _c;\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"names":["React","useState","useEffect","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Typography","Chip","Cancel","axios","format","ru","jsxDEV","_jsxDEV","Fragment","_Fragment","Bookings","_s","bookings","setBookings","fetchBookings","tg","window","Telegram","WebApp","response","get","initDataUnsafe","user","id","data","error","console","handleCancel","bookingId","put","getStatusColor","status","getStatusText","children","variant","sx","my","fileName","_jsxFileName","lineNumber","columnNumber","map","booking","divider","primary","computer","name","secondary","Date","start_time","locale","end_time","label","color","size","mr","edge","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/PC_CLUB/frontend/src/components/Bookings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Typography,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Cancel } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\ninterface Booking {\r\n  id: number;\r\n  computer_id: number;\r\n  start_time: string;\r\n  end_time: string;\r\n  status: string;\r\n  computer: {\r\n    name: string;\r\n    hourly_rate: number;\r\n  };\r\n}\r\n\r\nconst Bookings: React.FC = () => {\r\n  const [bookings, setBookings] = useState<Booking[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  const fetchBookings = async () => {\r\n    try {\r\n      const tg = window.Telegram.WebApp;\r\n      const response = await axios.get(`/api/bookings/user/${tg.initDataUnsafe.user.id}`);\r\n      setBookings(response.data);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке бронирований:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = async (bookingId: number) => {\r\n    try {\r\n      await axios.put(`/api/bookings/${bookingId}/cancel`);\r\n      fetchBookings();\r\n    } catch (error) {\r\n      console.error('Ошибка при отмене бронирования:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'primary';\r\n      case 'completed':\r\n        return 'success';\r\n      case 'cancelled':\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'Активно';\r\n      case 'completed':\r\n        return 'Завершено';\r\n      case 'cancelled':\r\n        return 'Отменено';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" sx={{ my: 2 }}>\r\n        Мои бронирования\r\n      </Typography>\r\n      <List>\r\n        {bookings.map((booking) => (\r\n          <ListItem key={booking.id} divider>\r\n            <ListItemText\r\n              primary={booking.computer.name}\r\n              secondary={\r\n                <>\r\n                  {format(new Date(booking.start_time), 'PPp', { locale: ru })}\r\n                  {' - '}\r\n                  {format(new Date(booking.end_time), 'PPp', { locale: ru })}\r\n                </>\r\n              }\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <Chip\r\n                label={getStatusText(booking.status)}\r\n                color={getStatusColor(booking.status) as any}\r\n                size=\"small\"\r\n                sx={{ mr: 1 }}\r\n              />\r\n              {booking.status === 'active' && (\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  onClick={() => handleCancel(booking.id)}\r\n                  color=\"error\"\r\n                >\r\n                  <Cancel />\r\n                </IconButton>\r\n              )}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bookings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}