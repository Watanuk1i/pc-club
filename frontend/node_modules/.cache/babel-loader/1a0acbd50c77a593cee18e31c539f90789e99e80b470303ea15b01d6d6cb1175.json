{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\PC_CLUB\\\\frontend\\\\src\\\\components\\\\Bookings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, ListItem, ListItemText, Typography, Chip, IconButton, Box } from '@mui/material';\nimport { Cancel as CancelIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Bookings = () => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  useEffect(() => {\n    // Здесь будет запрос к API\n    const fetchBookings = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/bookings');\n        const data = await response.json();\n        setBookings(data);\n      } catch (error) {\n        console.error('Ошибка при загрузке бронирований:', error);\n        // Временные тестовые данные\n        setBookings([{\n          id: 1,\n          computer_name: 'PC-1',\n          start_time: '2024-02-20T14:00:00',\n          end_time: '2024-02-20T16:00:00',\n          status: 'active'\n        }, {\n          id: 2,\n          computer_name: 'PC-2',\n          start_time: '2024-02-21T10:00:00',\n          end_time: '2024-02-21T12:00:00',\n          status: 'completed'\n        }]);\n      }\n    };\n    fetchBookings();\n  }, []);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return 'success';\n      case 'completed':\n        return 'info';\n      case 'cancelled':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'active':\n        return 'Активно';\n      case 'completed':\n        return 'Завершено';\n      case 'cancelled':\n        return 'Отменено';\n      default:\n        return status;\n    }\n  };\n  const formatDateTime = dateString => {\n    return format(new Date(dateString), 'dd.MM.yyyy HH:mm');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"\\u041C\\u043E\\u0438 \\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: bookings.map(booking => /*#__PURE__*/_jsxDEV(ListItem, {\n        secondaryAction: booking.status === 'active' && /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"cancel\",\n          children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: booking.computer_name,\n          secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\",\n              children: formatDateTime(booking.start_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), ' - ', /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\",\n              children: formatDateTime(booking.end_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              size: \"small\",\n              label: getStatusText(booking.status),\n              color: getStatusColor(booking.status),\n              sx: {\n                mt: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, booking.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Bookings, \"mhYuI94oNh8neuxZ6UayUTRC/Ns=\");\n_c = Bookings;\nexport default Bookings;\nvar _c;\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"names":["React","useState","useEffect","List","ListItem","ListItemText","Typography","Chip","IconButton","Box","Cancel","CancelIcon","format","jsxDEV","_jsxDEV","Fragment","_Fragment","Bookings","_s","bookings","setBookings","fetchBookings","response","fetch","data","json","error","console","id","computer_name","start_time","end_time","status","getStatusColor","getStatusText","formatDateTime","dateString","Date","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","booking","secondaryAction","edge","primary","secondary","component","color","size","label","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/PC_CLUB/frontend/src/components/Bookings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Chip,\r\n  IconButton,\r\n  Box\r\n} from '@mui/material';\r\nimport { Cancel as CancelIcon } from '@mui/icons-material';\r\nimport { format } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\ninterface Booking {\r\n  id: number;\r\n  computer_name: string;\r\n  start_time: string;\r\n  end_time: string;\r\n  status: 'active' | 'completed' | 'cancelled';\r\n}\r\n\r\nconst Bookings: React.FC = () => {\r\n  const [bookings, setBookings] = useState<Booking[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Здесь будет запрос к API\r\n    const fetchBookings = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/bookings');\r\n        const data = await response.json();\r\n        setBookings(data);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке бронирований:', error);\r\n        // Временные тестовые данные\r\n        setBookings([\r\n          {\r\n            id: 1,\r\n            computer_name: 'PC-1',\r\n            start_time: '2024-02-20T14:00:00',\r\n            end_time: '2024-02-20T16:00:00',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 2,\r\n            computer_name: 'PC-2',\r\n            start_time: '2024-02-21T10:00:00',\r\n            end_time: '2024-02-21T12:00:00',\r\n            status: 'completed'\r\n          }\r\n        ]);\r\n      }\r\n    };\r\n\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'success';\r\n      case 'completed':\r\n        return 'info';\r\n      case 'cancelled':\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'Активно';\r\n      case 'completed':\r\n        return 'Завершено';\r\n      case 'cancelled':\r\n        return 'Отменено';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  const formatDateTime = (dateString: string) => {\r\n    return format(new Date(dateString), 'dd.MM.yyyy HH:mm');\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Мои бронирования\r\n      </Typography>\r\n      <List>\r\n        {bookings.map((booking) => (\r\n          <ListItem\r\n            key={booking.id}\r\n            secondaryAction={\r\n              booking.status === 'active' && (\r\n                <IconButton edge=\"end\" aria-label=\"cancel\">\r\n                  <CancelIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          >\r\n            <ListItemText\r\n              primary={booking.computer_name}\r\n              secondary={\r\n                <>\r\n                  <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                    {formatDateTime(booking.start_time)}\r\n                  </Typography>\r\n                  {' - '}\r\n                  <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                    {formatDateTime(booking.end_time)}\r\n                  </Typography>\r\n                  <br />\r\n                  <Chip\r\n                    size=\"small\"\r\n                    label={getStatusText(booking.status)}\r\n                    color={getStatusColor(booking.status) as any}\r\n                    sx={{ mt: 1 }}\r\n                  />\r\n                </>\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Bookings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}